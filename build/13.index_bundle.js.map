{"version":3,"sources":["webpack:///./src/components/menu/PlayerItemInMenu.js"],"names":["PlayerItemInMenu","props","stateName","value","setState","bfModal","hpModal","state","id","selectCurrentPlayer","players","playerBafs","gameSchema","currentPlayer","bafsObj","atack","extraAtack","speed","extraSpeed","percent","extraPercent","className","icon","faFistRaised","faTachometerAlt","faRoad","this","player","playerId","playedPlayers","includes","diedPlayers","title","name","onClick","selectHero","size","health","faHeart","changeState","onMouseLeave","Array","parseInt","keys","map","heart","key","color","renderBafs","Component","connect"],"mappings":"s5DAwCMA,E,YACJ,WAAYC,GAAO,M,IAAA,O,4FAAA,S,EACjB,K,EAAA,eAAMA,GAAN,G,gDADiB,sBAQL,SAACC,EAAWC,GACxB,OAAQD,GACN,IAAK,UACH,EAAKE,SAAS,CACZC,SAAS,EACTC,SAAU,EAAKC,MAAMD,UAEvB,MACF,IAAK,UACH,EAAKF,SAAS,CACZE,SAAS,EACTD,SAAU,EAAKE,MAAMF,cAnBV,sBA0BL,kBAAM,EAAKD,SAAL,KACf,EAAKG,MADU,CAElBD,SAAS,EACTD,SAAS,QA7BQ,qBAgCN,SAACG,GACZ,EAAKP,MAAMQ,oBAAoBD,MAjCd,qBAoCN,WAAM,IACTE,EAAY,EAAKT,MAAjBS,QACJC,EAAaD,EAAQE,WAAWF,QAAQA,EAAQE,WAAWC,eAAeC,QAC1EC,EAAQJ,EAAWK,WACnBC,EAAQN,EAAWO,WACnBC,EAAUR,EAAWS,aAEzB,OAAO,oCACL,yBAAKC,UAAU,YACb,kBAAC,IAAD,CAAiBC,KAAMC,MACvB,8BACGR,IAGL,yBAAKM,UAAU,YACb,kBAAC,IAAD,CAAiBC,KAAME,MACvB,8BACGP,EADH,MAIF,yBAAKI,UAAU,YACb,kBAAC,IAAD,CAAiBC,KAAMG,MACvB,8BACGN,EADH,UAxDJ,EAAKZ,MAAQ,CACXD,SAAS,EACTD,SAAS,GAJM,E,gSAiEV,aACqBqB,KAAKzB,MAAzB0B,EADD,EACCA,OAAQjB,EADT,EACSA,QADT,EAEsBgB,KAAKnB,MAA1BD,EAFD,EAECA,QAASD,EAFV,EAEUA,QAEjB,OACE,yBAAKgB,UAAS,0CAGZX,EAAQE,WAAWC,gBAAkBc,EAAOC,UAAY,iBAH5C,qBAMZlB,EAAQE,WAAWiB,cAAcC,SAASH,EAAOC,WAAa,gBANlD,qBAOVlB,EAAQE,WAAWmB,YAAYD,SAASH,EAAOC,WAAa,eAE9DI,MAAOL,EAAOM,KAAMC,QAAS,kBAAM,EAAKC,WAAWR,EAAOC,YAE1D,yBAAKP,UAAU,eACb,kBAAC,IAAD,CAAiBe,KAAM,KAAMd,KAAMK,EAAOL,QAE5C,uBAAGD,UAAU,eACVM,EAAOM,MAEV,yBAAKZ,UAAU,iBACb,8BACGM,EAAOU,OACR,6BACE,kBAAC,IAAD,CAAiBf,KAAMgB,SAI7B,yBAAKjB,UAAU,gBACb,8BACGM,EAAOZ,MACR,6BACE,kBAAC,IAAD,CAAiBO,KAAMC,SAI7B,yBAAKF,UAAU,cACb,0BACEa,QAASxB,EAAQE,WAAWC,gBAAkBc,EAAOC,SACnD,kBAAM,EAAKW,YAAY,YAAa,aAEtCC,aAAc,kBAAM,EAAKpC,SAAL,KACf,EAAKG,MADU,CAElBF,SAAS,EACTC,SAAS,OAPb,MAaEA,GACA,yBAAKe,UAAU,UACZ,EAAIoB,MAAMC,SAASf,EAAOU,SAASM,QAAQC,KAAI,SAACC,EAAOrC,GACtD,OAAO,kBAAC,IAAD,CAAiBsC,IAAKtC,EAAIc,KAAMgB,IAASS,MAAM,YAI5D,0BACEb,QAASxB,EAAQE,WAAWC,gBAAkBc,EAAOC,SACnD,kBAAM,EAAKW,YAAY,YAAa,aAEtCC,aAAc,kBAAM,EAAKpC,SAAL,KACf,EAAKG,MADU,CAElBF,SAAS,EACTC,SAAS,OAPb,OAaED,GACA,yBAAKgB,UAAU,QACb,oCACGK,KAAKsB,sB,8BA7ISC,aA2JhBC,uBAJS,SAAA3C,GAAK,MAAK,CAChCG,QAASH,EAAMG,WAGuB,CAAED,yBAA3ByC,CAAkDlD","file":"13.index_bundle.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  faCat,\r\n  faCrow,\r\n  faGhost,\r\n  faSkullCrossbones,\r\n  faSpider,\r\n  faDog,\r\n  faDove,\r\n  faDragon,\r\n  faFish,\r\n  faFrog,\r\n  faHorse,\r\n  faOtter,\r\n  faAngry,\r\n  faBaby,\r\n  faBlind,\r\n  faBug,\r\n  faDizzy,\r\n  faFemale,\r\n  faFlushed,\r\n  faFrown,\r\n  faGrimace,\r\n  faGrin,\r\n  faGrinBeam,\r\n  faGrinHearts,\r\n  faGrinTongueSquint,\r\n  faGrinTongueWink,\r\n\r\n  //====>\r\n  faHeart,\r\n  faTachometerAlt,\r\n  faFistRaised,\r\n  faRoad\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { isEmpty } from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { selectCurrentPlayer } from './../../redux/actions/playersActions';\r\n\r\nclass PlayerItemInMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hpModal: false,\r\n      bfModal: false\r\n    }\r\n  }\r\n\r\n  changeState = (stateName, value) => {\r\n    switch (stateName) {\r\n      case \"hpModal\":\r\n        this.setState({\r\n          bfModal: false,\r\n          hpModal: !this.state.hpModal\r\n        })\r\n        break;\r\n      case \"bfModal\":\r\n        this.setState({\r\n          hpModal: false,\r\n          bfModal: !this.state.bfModal\r\n        })\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  closeModals = () => this.setState({\r\n    ...this.state,\r\n    hpModal: false,\r\n    bfModal: false\r\n  })\r\n\r\n  selectHero = (id) => {\r\n    this.props.selectCurrentPlayer(id);\r\n  }\r\n\r\n  renderBafs = () => {\r\n    const { players } = this.props;\r\n    let playerBafs = players.gameSchema.players[players.gameSchema.currentPlayer].bafsObj\r\n    let atack = playerBafs.extraAtack\r\n    let speed = playerBafs.extraSpeed\r\n    let percent = playerBafs.extraPercent\r\n\r\n    return <>\r\n      <div className=\"baf-drop\">\r\n        <FontAwesomeIcon icon={faFistRaised} />\r\n        <span>\r\n          {atack}\r\n        </span>\r\n      </div>\r\n      <div className=\"baf-drop\">\r\n        <FontAwesomeIcon icon={faTachometerAlt} />\r\n        <span>\r\n          {speed}%\r\n        </span>\r\n      </div>\r\n      <div className=\"baf-drop\">\r\n        <FontAwesomeIcon icon={faRoad} />\r\n        <span>\r\n          {percent}%\r\n        </span>\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  render() {\r\n    const { player, players } = this.props;\r\n    const { hpModal, bfModal } = this.state;\r\n\r\n    return (\r\n      <div className={\r\n        `players-in-menu__item \r\n        ${\r\n        players.gameSchema.currentPlayer === player.playerId && \"current-player\"\r\n        }\r\n        ${\r\n        players.gameSchema.playedPlayers.includes(player.playerId) && \"played-player\"}\r\n        ${players.gameSchema.diedPlayers.includes(player.playerId) && \"died-player\"}`\r\n\r\n      } title={player.name} onClick={() => this.selectHero(player.playerId)}>\r\n\r\n        <div className=\"player-icon\">\r\n          <FontAwesomeIcon size={'2x'} icon={player.icon} />\r\n        </div>\r\n        <p className=\"player-name\">\r\n          {player.name}\r\n        </p>\r\n        <div className=\"health-number\">\r\n          <span>\r\n            {player.health}\r\n            <sup>\r\n              <FontAwesomeIcon icon={faHeart} />\r\n            </sup>\r\n          </span>\r\n        </div>\r\n        <div className=\"atack-number\">\r\n          <span>\r\n            {player.atack}\r\n            <sup>\r\n              <FontAwesomeIcon icon={faFistRaised} />\r\n            </sup>\r\n          </span>\r\n        </div>\r\n        <div className=\"extra-info\">\r\n          <span\r\n            onClick={players.gameSchema.currentPlayer === player.playerId ?\r\n              () => this.changeState(\"hpModal\") : () => { }\r\n            }\r\n            onMouseLeave={() => this.setState({\r\n              ...this.state,\r\n              bfModal: false,\r\n              hpModal: false\r\n            })}\r\n          >\r\n            HP\r\n          </span>\r\n          {\r\n            hpModal &&\r\n            <div className=\"hearts\">\r\n              {[...Array(parseInt(player.health)).keys()].map((heart, id) => {\r\n                return <FontAwesomeIcon key={id} icon={faHeart} color=\"red\" />\r\n              })}\r\n            </div>\r\n          }\r\n          <span\r\n            onClick={players.gameSchema.currentPlayer === player.playerId ?\r\n              () => this.changeState(\"bfModal\") : () => { }\r\n            }\r\n            onMouseLeave={() => this.setState({\r\n              ...this.state,\r\n              bfModal: false,\r\n              hpModal: false\r\n            })}\r\n          >\r\n            BFS\r\n          </span>\r\n          {\r\n            bfModal &&\r\n            <div className=\"bafs\">\r\n              <>\r\n                {this.renderBafs()}\r\n              </>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  players: state.players\r\n});\r\n\r\nexport default connect(mapStateToProps, { selectCurrentPlayer })(PlayerItemInMenu);\r\n"],"sourceRoot":""}