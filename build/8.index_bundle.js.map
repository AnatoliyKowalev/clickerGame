{"version":3,"sources":["webpack:///./src/redux/actions/playersActions.js","webpack:///./src/utils/constants.js","webpack:///./src/components/playersFormEdit/PickHeroPage.js"],"names":["startPlayersEditing","value","dispatch","type","TOGGLE_PLAYERS_FORM_EDITING","payload","store","getState","players","formPlayersEditing","resetCircle","RESET_CIRCLE","circle","gameSchema","checkPlayers","setGameSchema","schema","SET_GAME_CHEMA","selectCurrentPlayer","playerId","newPlayersArr","map","player","bafs","forEach","baf","id","bafsObj","extraAtack","extraPercent","extraSpeed","SET_CURRENT_PLAYER","minusHealth","number","health","MINUS_HEALTH","startRound","bool","SET_ACTIVE_GAME","writeRoundStatistic","obj","gameHistory","unshift","WRITE_ROUND_SCTATISTIC","PLAYER_PLAYED","setBafToPlayer","plyerId","index","ADD_BAF","diedPlayers","diedPlayersArr","includes","PLAYER_DIED","length","livePlayersNumber","gameOver","setResultTable","sortedTable","SET_RESULT_TABLE","kind","name","icon","faHeart","faHeartbeat","faSpider","faBlind","faAccessibleIcon","faAmbulance","faAllergies","faRobot","faAngry","faBabyCarriage","faBed","faBiking","faCarrot","faCat","faCloudSun","faFighterJet","faSnowman","faMeteor","faPizzaSlice","faRadiation","resultSchema","hp","gs","push","item","round","clicks","genereateRandomNumber","from","to","Math","random","iconsArr","faCrow","faGhost","faSkullCrossbones","faDog","faDove","faDragon","faFish","faFrog","faHorse","faOtter","faBaby","faBug","faDizzy","faFemale","faFlushed","faFrown","faGrimace","faGrin","faGrinBeam","faGrinHearts","faGrinTongueSquint","faGrinTongueWink","PickHeroItem","lazy","PickHeroPage","props","state","val","isEmpty","setState","validForm","methodName","methodValue","updatedPlayers","checkValid","hardLvl","hpSystem","startHpCount","currentPlayer","activeGame","playedPlayers","atack","playersCount","Array","parseInt","this","keys","className","checkValidForm","setPlayerField","key","onClick","startGame","Component","connect"],"mappings":"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","file":"8.index_bundle.js","sourcesContent":["import React from 'react';\r\nimport store from '../store/store';\r\nimport {\r\n  SET_USERS_COUNT,\r\n  TOGGLE_PLAYERS_FORM_EDITING,\r\n  SET_GAME_CHEMA,\r\n  SET_CURRENT_PLAYER,\r\n  SET_ACTIVE_GAME,\r\n  WRITE_ROUND_SCTATISTIC,\r\n  PLAYER_PLAYED,\r\n  RESET_CIRCLE,\r\n  MINUS_HEALTH,\r\n  ADD_BAF,\r\n  PLAYER_DIED,\r\n  SET_RESULT_TABLE\r\n} from './actionTypes';\r\nimport { toast } from 'react-toastify';\r\nimport uuidv4 from 'uuid/v4';\r\nimport { isEmpty } from 'lodash';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { gameOver } from '../../utils/constants';\r\n\r\nexport const setUsers = (count) => dispatch => {\r\n  dispatch({\r\n    type: SET_USERS_COUNT,\r\n    payload: count\r\n  });\r\n};\r\n\r\n\r\nexport const startPlayersEditing = (value) => dispatch => {\r\n  dispatch({\r\n    type: TOGGLE_PLAYERS_FORM_EDITING,\r\n    payload: value ? value : !store.getState().players.formPlayersEditing\r\n  });\r\n};\r\n\r\nexport const resetCircle = () => dispatch => {\r\n  dispatch({\r\n    type: RESET_CIRCLE,\r\n    payload: {\r\n      circle: ++store.getState().players.gameSchema.circle\r\n    }\r\n  });\r\n\r\n  checkPlayers();\r\n};\r\n\r\nexport const setGameSchema = (schema) => dispatch => {\r\n  dispatch({\r\n    type: SET_GAME_CHEMA,\r\n    payload: schema\r\n  });\r\n};\r\n\r\nexport const selectCurrentPlayer = (playerId) => dispatch => {\r\n  let newPlayersArr = store.getState().players.gameSchema.players;\r\n\r\n  newPlayersArr = newPlayersArr.map(player => {\r\n    if (player.playerId === playerId) {\r\n      player.bafs.forEach((baf) => {\r\n        switch (baf.id) {\r\n          case 2:\r\n            player.bafsObj.extraAtack += 2\r\n            break;\r\n          case 3:\r\n            player.bafsObj.extraPercent -= 7;\r\n            break;\r\n          case 4:\r\n            player.bafsObj.extraPercent += 5;\r\n            break;\r\n          case 6:\r\n            player.bafsObj.extraAtack -= 3;\r\n            break;\r\n          case 7:\r\n            player.bafsObj.extraSpeed += 9;\r\n            break;\r\n          case 8:\r\n            player.bafsObj.extraAtack -= 3.5;\r\n            break;\r\n          case 9:\r\n            player.bafsObj.extraPercent -= 6;\r\n            break;\r\n          case 10:\r\n            player.bafsObj.extraAtack += 2;\r\n            break;\r\n          case 11:\r\n            player.bafsObj.extraPercent += 5;\r\n            break;\r\n          case 13:\r\n            player.bafsObj.extraPercent -= 13;\r\n            break;\r\n          case 14:\r\n            player.bafsObj.extraAtack += 4;\r\n            break;\r\n          case 16:\r\n            player.bafsObj.extraPercent += 10;\r\n            break;\r\n          case 18:\r\n            player.bafsObj.extraAtack += 2.7\r\n            break;\r\n          case 19:\r\n            player.bafsObj.extraAtack += 3.2\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      })\r\n      player.bafs = [];\r\n      return player;\r\n    } else {\r\n      return player;\r\n    }\r\n  })\r\n\r\n  dispatch({\r\n    type: SET_CURRENT_PLAYER,\r\n    payload: playerId\r\n  });\r\n};\r\n\r\nexport const minusHealth = (playerId, number) => dispatch => {\r\n  let newPlayersArr = store.getState().players.gameSchema.players;\r\n  newPlayersArr = newPlayersArr.map(player => {\r\n    if (player.playerId === playerId) {\r\n      player.health -= number\r\n      return player\r\n    } else return player\r\n  })\r\n  dispatch({\r\n    type: MINUS_HEALTH,\r\n    payload: newPlayersArr\r\n  });\r\n};\r\n\r\nexport const startRound = (bool) => dispatch => {\r\n  dispatch({\r\n    type: SET_ACTIVE_GAME,\r\n    payload: bool\r\n  });\r\n};\r\n\r\nexport const writeRoundStatistic = (id, obj, circle) => dispatch => {\r\n  let newPlayersArr = store.getState().players.gameSchema.players;\r\n\r\n  obj.circle = circle;\r\n  newPlayersArr.map((player) => {\r\n    if (player.playerId === id) {\r\n      player.gameHistory.unshift(obj)\r\n      player.bafsObj.extraAtack = 0;\r\n      player.bafsObj.extraPercent = 0;\r\n      player.bafsObj.extraSpeed = 0;\r\n      return player;\r\n    } else return player;\r\n  })\r\n\r\n  dispatch({\r\n    type: WRITE_ROUND_SCTATISTIC,\r\n    payload: newPlayersArr\r\n  });\r\n\r\n  dispatch({\r\n    type: PLAYER_PLAYED,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const setBafToPlayer = (plyerId, baf) => dispatch => {\r\n  let newPlayersArr = store.getState().players.gameSchema.players;\r\n\r\n  newPlayersArr = newPlayersArr.map(player => {\r\n    if (player.playerId === plyerId) {\r\n      player.bafs.unshift(baf);\r\n      player.bafs.forEach((baf, index) => {\r\n        switch (baf.id) {\r\n          case 0:\r\n          case 5:\r\n            player.health += 1\r\n            break;\r\n          case 12:\r\n            player.health += 2\r\n            break;\r\n          case 1:\r\n          case 15:\r\n          case 17:\r\n            player.health -= 1\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      })\r\n\r\n      return player;\r\n    } else return player;\r\n  })\r\n\r\n  dispatch({\r\n    type: ADD_BAF,\r\n    payload: newPlayersArr\r\n  });\r\n}\r\n\r\nexport const checkPlayers = () => async dispatch => {\r\n  let newPlayersArr = await store.getState().players.gameSchema.players;\r\n  let diedPlayersArr = await store.getState().players.gameSchema.diedPlayers;\r\n\r\n  await newPlayersArr.map(player => {\r\n    if (player.health <= 0 && !diedPlayersArr.includes(player.playerId)) {\r\n      dispatch({\r\n        type: PLAYER_DIED,\r\n        payload: player.playerId\r\n      });\r\n    }\r\n  })\r\n\r\n  let livePlayersNumber = await newPlayersArr.length - store.getState().players.gameSchema.diedPlayers.length\r\n  // console.log(livePlayersNumber)\r\n  if (livePlayersNumber <= 1) {\r\n    gameOver(livePlayersNumber)\r\n  }\r\n\r\n\r\n}\r\n\r\nexport const setResultTable = (sortedTable) => dispatch => {\r\n  dispatch({\r\n    type: SET_RESULT_TABLE,\r\n    payload: sortedTable\r\n  });\r\n}","import {\r\n  faPercent,\r\n  faSkiing,\r\n  faMeteor,\r\n  faRadiation,\r\n  faHeart, faDna,\r\n  faHeartbeat,\r\n  faSnowplow,\r\n  faShippingFast,\r\n  //====\r\n  faCat,\r\n  faCrow,\r\n  faGhost,\r\n  faSkullCrossbones,\r\n  faDog,\r\n  faDove,\r\n  faDragon,\r\n  faFish,\r\n  faFrog,\r\n  faHorse,\r\n  faOtter,\r\n  faBaby,\r\n  faBug,\r\n  faDizzy,\r\n  faFemale,\r\n  faFlushed,\r\n  faFrown,\r\n  faGrimace,\r\n  faGrin,\r\n  faGrinBeam,\r\n  faGrinHearts,\r\n  faGrinTongueSquint,\r\n  faGrinTongueWink,\r\n  faSpider,\r\n  faBlind,\r\n  faAccessibleIcon,\r\n  faAmbulance,\r\n  faAllergies,\r\n  faRobot,\r\n  faAngry,\r\n  faBabyCarriage,\r\n  faBed,\r\n  faBiking,\r\n  faCarrot,\r\n  faCloudSun,\r\n  faFighterJet,\r\n  faSnowman,\r\n  faPizzaSlice\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport store from '../redux/store/store';\r\nimport { setResultTable } from '../redux/actions/playersActions';\r\n\r\nexport const bafs = [\r\n  {\r\n    id: 0,\r\n    kind: \"health\",\r\n    name: \"+ 1 HEALTH\",\r\n    icon: faHeart\r\n  },\r\n  {\r\n    id: 1,\r\n    kind: \"health\",\r\n    name: \"- 1 HEALTH\",\r\n    icon: faHeartbeat\r\n  },\r\n  {\r\n    id: 2,\r\n    kind: \"atack\",\r\n    name: \"Тебя укусил паук, и ты стал человеком-пауком. Твоя получил +2 к силе!\",\r\n    icon: faSpider\r\n  },\r\n  {\r\n    id: 3,\r\n    kind: \"percent\",\r\n    name: \"Ты немного ослеп, и по этому сбился с пути, по этому путь который ты пройдешь увеличился на 7%.\",\r\n    icon: faBlind\r\n  },\r\n  {\r\n    id: 4,\r\n    kind: \"percent\",\r\n    name: \"Ух ты! Профессор с людей Х согласился тебе помочь и подбросил тебя ближе к выходу на 5%\",\r\n    icon: faAccessibleIcon\r\n  },\r\n  {\r\n    id: 5,\r\n    kind: \"health\",\r\n    name: \"Мимо проезжала скорая, и подкинуло одно лишнее сердечко, теперь у тебя +1 сердце\",\r\n    icon: faAmbulance\r\n  },\r\n  {\r\n    id: 6,\r\n    kind: \"atack\",\r\n    name: \"Ты в баре выпил какую-то жижу и теперь тебе поплохело, твоя сила упала на 3\",\r\n    icon: faAllergies\r\n  },\r\n  {\r\n    id: 7,\r\n    kind: \"speed\",\r\n    name: \"Следующий раз полоса дороги будет убывать так же медленно, как работает адроид, то-есть очень медленно\",\r\n    icon: faRobot\r\n  },\r\n  {\r\n    id: 8,\r\n    kind: \"atack\",\r\n    name: \"Ты нарвался на злого деда, и он тебе надавал по коленям своим костылем, теперь ты медленно побежишь\",\r\n    icon: faAngry\r\n  },\r\n  {\r\n    id: 9,\r\n    kind: \"percent\",\r\n    name: \"На твоем пути появилась мамочка с коляской, тебе придется ее оббежать, это +6% к твоей дороге\",\r\n    icon: faBabyCarriage\r\n  },\r\n  {\r\n    id: 10,\r\n    kind: \"atack\",\r\n    name: \"Ты хорошо выспался и по этому сильнее, +2 к силе\",\r\n    icon: faBed\r\n  },\r\n  {\r\n    id: 11,\r\n    kind: \"percent\",\r\n    name: \"Пока ты бежал, тебе догнал какой-то байкер и подбросил, -5% к дороге\",\r\n    icon: faBiking\r\n  },\r\n  {\r\n    id: 12,\r\n    kind: \"health\",\r\n    name: \"Ля какая вкусная и полезная морковочка, она добавила тебе +2 жизни\",\r\n    icon: faCarrot\r\n  },\r\n  {\r\n    id: 13,\r\n    kind: \"percent\",\r\n    name: \"Черная кошка перебежала тебе дорогу, а ты суеверный, придется оббегать +10% к дороге\",\r\n    icon: faCat\r\n  },\r\n  {\r\n    id: 14,\r\n    kind: \"atack\",\r\n    name: \"Вышло солнышко, зарядило тебя силой, +3к силе\",\r\n    icon: faCloudSun\r\n  },\r\n  {\r\n    id: 15,\r\n    kind: \"health\",\r\n    name: \"Тебя сбил истрибитель, упс... -1 жизнь\",\r\n    icon: faFighterJet\r\n  },\r\n  {\r\n    id: 16,\r\n    kind: \"percent\",\r\n    name: \"Ты встретил доброго Сергея, он подсказал тебе как сократить дорогу. -10% к дороге\",\r\n    icon: faSnowman\r\n  },\r\n  {\r\n    id: 17,\r\n    kind: \"health\",\r\n    name: \"На тебя упал метеорит. -1 жизнь\",\r\n    icon: faMeteor\r\n  },\r\n  {\r\n    id: 18,\r\n    kind: \"atack\",\r\n    name: \"Ммм.. пица! Скував ее ты стал сильнее!\",\r\n    icon: faPizzaSlice\r\n  },\r\n  {\r\n    id: 19,\r\n    kind: \"atack\",\r\n    name: \"Ты искупался в чернобыльской речке, и у тебя выросло еще 3 ноги, теперь ты быстрее бегаешь\",\r\n    icon: faRadiation\r\n  },\r\n]\r\n\r\nexport const gameOver = async (livePlayersNumber) => {\r\n  let newPlayersArr = store.getState().players.gameSchema.players;\r\n  let resultSchema = [];\r\n\r\n  newPlayersArr.map((player, index) => {\r\n    let obj = {};\r\n    obj.playerId = player.playerId;\r\n    obj.hp = player.health;\r\n    obj.icon = player.icon;\r\n    obj.name = player.name;\r\n    obj.gameHistory = player.gameHistory,\r\n      obj.gs = 0,\r\n      resultSchema.push(obj)\r\n  })\r\n\r\n  resultSchema = resultSchema.map(item => {\r\n    item.gs += item.hp * 1000;\r\n    item.gameHistory.forEach((round) => {\r\n      item.gs += round.clicks > 0 ? (round.clicks / -10) : -30\r\n    })\r\n    return item\r\n  })\r\n\r\n  await store.dispatch(setResultTable(resultSchema));\r\n};\r\n\r\nexport const genereateRandomNumber = (from, to) => {\r\n  return Math.round(Math.random() * (from + to));\r\n};\r\n\r\nexport const iconsArr = [\r\n  faCat,\r\n  faCrow,\r\n  faGhost,\r\n  faSkullCrossbones,\r\n  faSpider,\r\n  faDog,\r\n  faDove,\r\n  faDragon,\r\n  faFish,\r\n  faFrog,\r\n  faHorse,\r\n  faOtter,\r\n  faAngry,\r\n  faBaby,\r\n  faBlind,\r\n  faBug,\r\n  faDizzy,\r\n  faFemale,\r\n  faFlushed,\r\n  faFrown,\r\n  faGrimace,\r\n  faGrin,\r\n  faGrinBeam,\r\n  faGrinHearts,\r\n  faGrinTongueSquint,\r\n  faGrinTongueWink\r\n]","import React, { Component, lazy } from 'react';\r\nimport { isEmpty } from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { setUsers, startPlayersEditing, setGameSchema } from '../../redux/actions/playersActions';\r\nimport { Link } from 'react-router-dom';\r\nimport { genereateRandomNumber } from '../../utils/constants';\r\n\r\nconst PickHeroItem = lazy(() => import('./PickHeroItem'));\r\n\r\n\r\nclass PickHeroPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playersCount: [],\r\n      players: [],\r\n      hardLvl: 1,\r\n      hpSystem: 0,\r\n      startHpCount: 3,\r\n      circle: 1,\r\n      validForm: false,\r\n      currentPlayer: null,\r\n      activeGame: false,\r\n      playedPlayers: [],\r\n      diedPlayers: [],\r\n      sortedTable: [],\r\n      gameOver: false\r\n    }\r\n  }\r\n\r\n\r\n  checkValidForm = () => {\r\n    const { players } = this.state;\r\n\r\n    let val = true\r\n    if (players.length) {\r\n      players.map(player => {\r\n        if (\r\n          isEmpty(player.icon) ||\r\n          isEmpty(player.name)\r\n        ) { val = false }\r\n      })\r\n    } else val = false\r\n    this.setState({\r\n      ...this.state,\r\n      validForm: val\r\n    })\r\n  };\r\n\r\n  componentDidMount() {\r\n    let players = [...Array(parseInt(this.props.playersCount)).keys()];\r\n\r\n    players = players.map((player) => {\r\n      return {\r\n        playerId: player,\r\n        icon: null,\r\n        name: null,\r\n        health: null\r\n      }\r\n    })\r\n\r\n    this.setState({\r\n      playersCount: [...Array(parseInt(this.props.playersCount)).keys()],\r\n      players: players\r\n    })\r\n  };\r\n\r\n  setPlayerField = (playerId, methodName, methodValue) => {\r\n    let updatedPlayers = [];\r\n    let fieldAllPlayers = [];\r\n    const checkValid = (player) => {\r\n      if (\r\n        player.icon == null ||\r\n        player.name == null ||\r\n        isEmpty(player.name)) {\r\n        return false\r\n      } else return true\r\n    };\r\n\r\n    updatedPlayers = this.state.players.map((player) => {\r\n      if (player.playerId == playerId) {\r\n        player[methodName] = methodValue\r\n        return player\r\n      } else { return player }\r\n    });\r\n\r\n    updatedPlayers.map((player) => {\r\n      fieldAllPlayers = checkValid(player)\r\n    });\r\n\r\n    // this.props.setValidForm(fieldAllPlayers);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      players: updatedPlayers\r\n    })\r\n  };\r\n\r\n  startGame = () => {\r\n    const {\r\n      hardLvl,\r\n      hpSystem,\r\n      startHpCount,\r\n      players,\r\n      circle,\r\n      currentPlayer,\r\n      activeGame,\r\n      playedPlayers,\r\n      diedPlayers,\r\n      sortedTable,\r\n      gameOver\r\n    } = this.state;\r\n    let gameSchema = {};\r\n    let generetedPlayers = players.map(player => {\r\n      player.health = startHpCount\r\n      player.bafs = []\r\n      player.bafsObj = {\r\n        extraAtack: 0,\r\n        extraSpeed: 0,\r\n        extraPercent: 0,\r\n      }\r\n      player.atack = 5\r\n      player.gameHistory = []\r\n      return player;\r\n    })\r\n\r\n    gameSchema = {\r\n      players: generetedPlayers,\r\n      hardLvl: hardLvl,\r\n      hpSystem,\r\n      circle,\r\n      currentPlayer,\r\n      activeGame,\r\n      playedPlayers,\r\n      diedPlayers,\r\n      sortedTable,\r\n      gameOver\r\n    }\r\n\r\n    this.props.startPlayersEditing(false);\r\n    this.props.setGameSchema(gameSchema);\r\n  }\r\n\r\n  render() {\r\n    const { playersCount, players, validForm } = this.state;\r\n\r\n    return (\r\n      <div className=\"pick-hero-page\">\r\n        <h3>pick your hero <sup>{'[ ' + playersCount.length} ~ Players {' ]'}</sup></h3>\r\n        <h5 className=\"russian-text text-pulsing\">Заполните пустые поля, и выберите иконки для каждого игрока!</h5>\r\n        <br />\r\n        {playersCount.map((player, index) => {\r\n          return <PickHeroItem checkValidForm={this.checkValidForm} players={players} setPlayerField={this.setPlayerField} key={index} index={index} />\r\n        })}\r\n\r\n        {validForm &&\r\n          <Link to={'/game'}>\r\n            <button\r\n              className=\"btn _custom-width\"\r\n              onClick={() => this.startGame()}\r\n            >\r\n              <label className=\"btn-bg\"></label>\r\n              <span>Start</span>\r\n            </button>\r\n          </Link>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { startPlayersEditing, setGameSchema })(PickHeroPage);\r\n"],"sourceRoot":""}