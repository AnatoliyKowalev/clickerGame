{"version":3,"sources":["webpack:///./src/components/gameOver/GameOver.js"],"names":["GameOver","props","state","arrayToSort","array","this","players","gameSchema","resultTable","console","log","sort","a","b","gs","setState","className","isEmpty","to","data-text","map","player","index","key","playerId","color","icon","faCrown","name","Component","connect"],"mappings":"88BASMA,E,YACJ,WAAYC,GAAO,a,4FAAA,UACjB,wBAAMA,KACDC,MAAQ,CACXC,YAAa,IAHE,E,2SAQjB,IAAIC,EAAQC,KAAKJ,MAAMK,QAAQC,WAAWC,YAC1CC,QAAQC,IAAIN,GACZA,EAAMO,MAAK,SAAUC,EAAGC,GACtB,OAAOA,EAAEC,GAAKF,EAAEE,MAGlBT,KAAKU,SAAS,CACZZ,YAAaC,M,+BAIR,WAoBP,OACE,yBAAKY,UAAU,kBACZC,kBAAQZ,KAAKJ,MAAMK,QAAQC,WAAWC,cAAgB,kBAAE,IAAF,CAAWU,GAAG,MACrE,yBAAKF,UAAU,kBACb,wBAAIA,UAAU,SAASG,YAAU,SAAjC,SACA,wBAAIH,UAAU,SAASG,YAAU,SAAjC,UAGF,2BAAOH,UAAU,iBACf,+BACE,4BACE,kCAGA,oCAGA,oCAGA,6CAODC,kBAAQZ,KAAKJ,MAAMK,QAAQC,aA7C3B,+BACJ,EAAKL,MAAMC,YAAYiB,KAAI,SAACC,EAAQC,GACnC,OAAO,wBAAIC,IAAKF,EAAOG,SAAUR,UAAU,eACzC,4BAAKK,EAAOG,UACZ,4BACa,IAAVF,GAAe,kBAAC,IAAD,CAAiBN,UAAU,QAAQS,MAAO,SAAUC,KAAMC,MAE1E,kBAAC,IAAD,CAAiBD,KAAML,EAAOK,QAGhC,4BAAKL,EAAOO,MACZ,4BAAKP,EAAOP,gB,8BAjCDe,aAoFRC,uBALS,SAAA5B,GAAK,MAAK,CAChCI,QAASJ,EAAMI,WAIFwB,CAAyB9B","file":"12.index_bundle.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { isEmpty } from 'lodash';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {\r\n  faCrown\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass GameOver extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      arrayToSort: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let array = this.props.players.gameSchema.resultTable\r\n    console.log(array)\r\n    array.sort(function (a, b) {\r\n      return b.gs - a.gs;\r\n    })\r\n\r\n    this.setState({\r\n      arrayToSort: array\r\n    })\r\n\r\n  }\r\n  render() {\r\n    const renderTable = () => {\r\n      return <tbody>\r\n        {this.state.arrayToSort.map((player, index) => {\r\n          return <tr key={player.playerId} className=\"result-item\">\r\n            <td>{player.playerId}</td>\r\n            <td>\r\n              {index === 0 && <FontAwesomeIcon className=\"crown\" color={'orange'} icon={faCrown} />}\r\n\r\n              <FontAwesomeIcon icon={player.icon} />\r\n\r\n            </td>\r\n            <td>{player.name}</td>\r\n            <td>{player.gs}</td>\r\n          </tr>\r\n        })}\r\n      </tbody>\r\n\r\n    }\r\n\r\n    return (\r\n      <div className=\"game-over-page\">\r\n        {isEmpty(this.props.players.gameSchema.resultTable) && < Redirect to=\"/\" />}\r\n        <div className=\"glitch-wrapper\">\r\n          <h1 className=\"glitch\" data-text=\"GAME-\">GAME-</h1>\r\n          <h1 className=\"glitch\" data-text=\" OVER\"> OVER</h1>\r\n        </div>\r\n\r\n        <table className=\"results-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                id\r\n          </th>\r\n              <th>\r\n                icon\r\n          </th>\r\n              <th>\r\n                name\r\n          </th>\r\n              <th>\r\n                Gear Score\r\n          </th>\r\n            </tr>\r\n          </thead>\r\n          {\r\n\r\n            !isEmpty(this.props.players.gameSchema) && renderTable()}\r\n\r\n\r\n        </table>\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  players: state.players\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(GameOver);"],"sourceRoot":""}