{"version":3,"sources":["webpack:///./src/components/playersFormEdit/PickHeroItem.js"],"names":["PickPlayerIcon","lazy","PickHeroItem","props","e","target","name","setPlayerField","index","value","checkValidForm","iconsArr","map","icon","icons","players","player","push","filteredIconsToRandom","getIconsNameFromArr","length","forEach","ic","filter","iconName","splice","setState","state","usedIconsArr","allIconsNames","id","genereateRandomNumber","this","className","type","maxLength","onChange","usedIconSetToArr","setIconToUsedFunc","Component"],"mappings":"+rCAKA,IAAMA,EAAiBC,gBAAK,kBAAM,+DAE5BC,E,YAEJ,WAAYC,GAAO,M,IAAA,O,4FAAA,S,EACjB,K,EAAA,eAAMA,GAAN,G,gDADiB,mBASR,SAACC,GACV,OAAQA,EAAEC,OAAOC,MACf,IAAK,aACH,EAAKH,MAAMI,eAAe,EAAKJ,MAAMK,MAAO,OAAQJ,EAAEC,OAAOI,OAKjE,EAAKN,MAAMO,oBAjBM,8BA0BG,WACpB,OAAOC,IAASC,KAAI,SAAAC,GAClB,OAAOA,QA5BQ,4BAgCC,WAClB,IAAIC,EAAQ,GAEZ,EAAKX,MAAMY,QAAQH,KAAI,SAAAI,GACjBA,EAAOH,MAAQC,EAAMG,KAAKD,EAAOH,SAGvC,IAAIK,EAAwB,EAAKC,sBAiBjC,OAhBIL,EAAMM,QACRN,EAAMO,SAAQ,SAAAC,GACZJ,EAAsBK,QAAO,SAACV,EAAML,GAClCc,EAAGE,WAAaX,EAAKW,UAAYN,EAAsBO,OAAOjB,EAAO,SAK3E,EAAKkB,S,+VAAL,IACK,EAAKC,MADV,CAEEC,aAAcd,EACde,cAAeX,EACfY,GAAIC,YAAsB,EAAG,EAAKJ,MAAME,cAAcT,OAAS,MAC9D,WACD,EAAKjB,MAAMI,eAAe,EAAKJ,MAAMK,MAAO,OAAQ,EAAKmB,MAAME,cAAc,EAAKF,MAAMG,QAEnF,EAAKH,MAAME,cAAc,EAAKF,MAAMG,OAtD3C,EAAKH,MAAQ,CACXE,cAAe,GACfD,aAAc,GACdE,GAAI,MALW,E,2SAqBjBE,KAAKN,SAAS,CACZG,cAAeG,KAAKb,0B,+BAqCf,MACoBa,KAAK7B,MAAxBK,EADD,EACCA,MAAOO,EADR,EACQA,QACf,OACE,yBAAKkB,UAAU,wBACb,8BAAOzB,EAAQ,EAAI,MACnB,kCAEE,yBAAKyB,UAAU,eACb,2BAAOA,UAAU,gBACf,0BAAMA,UAAU,WAChB,2BAAOA,UAAU,YAEf,2BACEA,UAAU,eACVC,KAAK,OACLC,UAAW,GACX7B,KAAK,aACL8B,SAAUJ,KAAKI,eAOzB,kBAACpC,EAAD,CACEU,eAAgBsB,KAAK7B,MAAMO,eAC3BK,QAASA,EACTP,MAAOwB,KAAK7B,MAAMK,MAClBD,eAAgByB,KAAK7B,MAAMI,eAC3B8B,iBAAkBL,KAAKL,MAAME,cAC7BS,kBAAmBN,KAAKM,0B,8BA3FPC,aAiGZrC","file":"15.index_bundle.js","sourcesContent":["import React, { Component, lazy } from 'react';\r\n\r\nimport { iconsArr, genereateRandomNumber } from '../../utils/constants';\r\nimport { isEmpty } from 'lodash';\r\n\r\nconst PickPlayerIcon = lazy(() => import('./PickPlayerIcon'));\r\n\r\nclass PickHeroItem extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allIconsNames: [],\r\n      usedIconsArr: [],\r\n      id: null\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"playerName\":\r\n        this.props.setPlayerField(this.props.index, 'name', e.target.value)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.props.checkValidForm();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      allIconsNames: this.getIconsNameFromArr()\r\n    })\r\n  }\r\n\r\n  getIconsNameFromArr = () => {\r\n    return iconsArr.map(icon => {\r\n      return icon\r\n    })\r\n  }\r\n\r\n  setIconToUsedFunc = () => {\r\n    let icons = [];\r\n\r\n    this.props.players.map(player => {\r\n      if (player.icon) { icons.push(player.icon) }\r\n    })\r\n\r\n    let filteredIconsToRandom = this.getIconsNameFromArr();\r\n    if (icons.length) {\r\n      icons.forEach(ic => {\r\n        filteredIconsToRandom.filter((icon, index) => {\r\n          ic.iconName === icon.iconName && filteredIconsToRandom.splice(index, 1)\r\n        })\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      usedIconsArr: icons,\r\n      allIconsNames: filteredIconsToRandom,\r\n      id: genereateRandomNumber(0, this.state.allIconsNames.length - 1)\r\n    }, () => {\r\n      this.props.setPlayerField(this.props.index, 'icon', this.state.allIconsNames[this.state.id])\r\n    })\r\n    return this.state.allIconsNames[this.state.id]\r\n  }\r\n\r\n  render() {\r\n    const { index, players } = this.props;\r\n    return (\r\n      <div className=\"pick-hero__item mt-4\">\r\n        <span>{index + 1 + ' .'}</span>\r\n        <fieldset>\r\n\r\n          <div className=\"input-group\">\r\n            <label className=\"label-border\">\r\n              <span className=\"border\"></span>\r\n              <label className=\"label-bg\">\r\n\r\n                <input\r\n                  className=\"input-common\"\r\n                  type=\"text\"\r\n                  maxLength={15}\r\n                  name=\"playerName\"\r\n                  onChange={this.onChange}\r\n                />\r\n              </label>\r\n            </label>\r\n\r\n          </div>\r\n        </fieldset>\r\n        <PickPlayerIcon\r\n          checkValidForm={this.props.checkValidForm}\r\n          players={players}\r\n          index={this.props.index}\r\n          setPlayerField={this.props.setPlayerField}\r\n          usedIconSetToArr={this.state.allIconsNames}\r\n          setIconToUsedFunc={this.setIconToUsedFunc}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default PickHeroItem;"],"sourceRoot":""}