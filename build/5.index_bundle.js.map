{"version":3,"sources":["webpack:///./src/redux/actions/playersActions.js","webpack:///./src/utils/constants.js","webpack:///./node_modules/react-router/es/generatePath.js","webpack:///./node_modules/react-router/es/Redirect.js","webpack:///./node_modules/react-router-dom/es/Redirect.js","webpack:///./src/components/gameComponent/GameComponent.js"],"names":["startPlayersEditing","value","dispatch","type","TOGGLE_PLAYERS_FORM_EDITING","payload","store","getState","players","formPlayersEditing","resetCircle","RESET_CIRCLE","circle","gameSchema","checkPlayers","setGameSchema","schema","SET_GAME_CHEMA","selectCurrentPlayer","playerId","newPlayersArr","map","player","bafs","forEach","baf","id","bafsObj","extraAtack","extraPercent","extraSpeed","SET_CURRENT_PLAYER","minusHealth","number","health","MINUS_HEALTH","startRound","bool","SET_ACTIVE_GAME","writeRoundStatistic","obj","gameHistory","unshift","WRITE_ROUND_SCTATISTIC","PLAYER_PLAYED","setBafToPlayer","plyerId","index","ADD_BAF","diedPlayers","diedPlayersArr","includes","PLAYER_DIED","length","livePlayersNumber","gameOver","setResultTable","sortedTable","SET_RESULT_TABLE","kind","name","icon","faHeart","faHeartbeat","faSpider","faBlind","faAccessibleIcon","faAmbulance","faAllergies","faRobot","faAngry","faBabyCarriage","faBed","faBiking","faCarrot","faCat","faCloudSun","faFighterJet","faSnowman","faMeteor","faPizzaSlice","faRadiation","resultSchema","hp","gs","push","item","round","clicks","genereateRandomNumber","from","to","Math","random","iconsArr","faCrow","faGhost","faSkullCrossbones","faDog","faDove","faDragon","faFish","faFrog","faHorse","faOtter","faBaby","faBug","faDizzy","faFemale","faFlushed","faFrown","faGrimace","faGrin","faGrinBeam","faGrinHearts","faGrinTongueSquint","faGrinTongueWink","patternCache","cacheCount","pattern","cacheKey","cache","compiledGenerator","compile","arguments","undefined","params","generator","pretty","_extends","Object","assign","target","i","source","key","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_React$Component","Redirect","this","apply","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","isStatic","context","router","staticContext","componentWillMount","perform","componentDidMount","componentDidUpdate","prevProps","prevTo","nextTo","props","pathname","search","computeTo","_ref","computedMatch","history","replace","render","Component","propTypes","object","string","oneOfType","isRequired","defaultProps","contextTypes","shape","func","GameOver","lazy","ClickBar","GameComponent","state","currentPlayer","hh","ff","setState","bonus","atack","speed","isEmpty","console","log","toggleState","bb","percentage","startCounter","counter","setInterval","gameStartCounter","activeClickPlace","plus","parseInt","gameResult","endRound","clearInterval","interval","minusPercentintervalResetFunc","tempVariable","toFixed","status","timer","mills","secs","mins","finalRoundObj","resetIntervalFunc","startIntervalResetFunc","time","on","FortuneModal","checkCircle","playedPlayers","timeInterval","minusPercent","setBonuses","toggleTimer","startTimer","seconds","milliseconds","minutes","ll","stateName","chooseHeroModal","road","percent","colors","1","2","3","activateZone","className","activeGame","onClick","plusPercent","isOpen","color","connect"],"mappings":"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","file":"5.index_bundle.js","sourcesContent":["import React from 'react';\r\nimport store from '../store/store';\r\nimport {\r\n  SET_USERS_COUNT,\r\n  TOGGLE_PLAYERS_FORM_EDITING,\r\n  SET_GAME_CHEMA,\r\n  SET_CURRENT_PLAYER,\r\n  SET_ACTIVE_GAME,\r\n  WRITE_ROUND_SCTATISTIC,\r\n  PLAYER_PLAYED,\r\n  RESET_CIRCLE,\r\n  MINUS_HEALTH,\r\n  ADD_BAF,\r\n  PLAYER_DIED,\r\n  SET_RESULT_TABLE\r\n} from './actionTypes';\r\nimport { toast } from 'react-toastify';\r\nimport uuidv4 from 'uuid/v4';\r\nimport { isEmpty } from 'lodash';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { gameOver } from '../../utils/constants';\r\n\r\nexport const setUsers = (count) => dispatch => {\r\n  dispatch({\r\n    type: SET_USERS_COUNT,\r\n    payload: count\r\n  });\r\n};\r\n\r\n\r\nexport const startPlayersEditing = (value) => dispatch => {\r\n  dispatch({\r\n    type: TOGGLE_PLAYERS_FORM_EDITING,\r\n    payload: value ? value : !store.getState().players.formPlayersEditing\r\n  });\r\n};\r\n\r\nexport const resetCircle = () => dispatch => {\r\n  dispatch({\r\n    type: RESET_CIRCLE,\r\n    payload: {\r\n      circle: ++store.getState().players.gameSchema.circle\r\n    }\r\n  });\r\n\r\n  checkPlayers();\r\n};\r\n\r\nexport const setGameSchema = (schema) => dispatch => {\r\n  dispatch({\r\n    type: SET_GAME_CHEMA,\r\n    payload: schema\r\n  });\r\n};\r\n\r\nexport const selectCurrentPlayer = (playerId) => dispatch => {\r\n  let newPlayersArr = store.getState().players.gameSchema.players;\r\n\r\n  newPlayersArr = newPlayersArr.map(player => {\r\n    if (player.playerId === playerId) {\r\n      player.bafs.forEach((baf) => {\r\n        switch (baf.id) {\r\n          case 2:\r\n            player.bafsObj.extraAtack += 2\r\n            break;\r\n          case 3:\r\n            player.bafsObj.extraPercent -= 7;\r\n            break;\r\n          case 4:\r\n            player.bafsObj.extraPercent += 5;\r\n            break;\r\n          case 6:\r\n            player.bafsObj.extraAtack -= 3;\r\n            break;\r\n          case 7:\r\n            player.bafsObj.extraSpeed += 9;\r\n            break;\r\n          case 8:\r\n            player.bafsObj.extraAtack -= 3.5;\r\n            break;\r\n          case 9:\r\n            player.bafsObj.extraPercent -= 6;\r\n            break;\r\n          case 10:\r\n            player.bafsObj.extraAtack += 2;\r\n            break;\r\n          case 11:\r\n            player.bafsObj.extraPercent += 5;\r\n            break;\r\n          case 13:\r\n            player.bafsObj.extraPercent -= 13;\r\n            break;\r\n          case 14:\r\n            player.bafsObj.extraAtack += 4;\r\n            break;\r\n          case 16:\r\n            player.bafsObj.extraPercent += 10;\r\n            break;\r\n          case 18:\r\n            player.bafsObj.extraAtack += 2.7\r\n            break;\r\n          case 19:\r\n            player.bafsObj.extraAtack += 3.2\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      })\r\n      player.bafs = [];\r\n      return player;\r\n    } else {\r\n      return player;\r\n    }\r\n  })\r\n\r\n  dispatch({\r\n    type: SET_CURRENT_PLAYER,\r\n    payload: playerId\r\n  });\r\n};\r\n\r\nexport const minusHealth = (playerId, number) => dispatch => {\r\n  let newPlayersArr = store.getState().players.gameSchema.players;\r\n  newPlayersArr = newPlayersArr.map(player => {\r\n    if (player.playerId === playerId) {\r\n      player.health -= number\r\n      return player\r\n    } else return player\r\n  })\r\n  dispatch({\r\n    type: MINUS_HEALTH,\r\n    payload: newPlayersArr\r\n  });\r\n};\r\n\r\nexport const startRound = (bool) => dispatch => {\r\n  dispatch({\r\n    type: SET_ACTIVE_GAME,\r\n    payload: bool\r\n  });\r\n};\r\n\r\nexport const writeRoundStatistic = (id, obj, circle) => dispatch => {\r\n  let newPlayersArr = store.getState().players.gameSchema.players;\r\n\r\n  obj.circle = circle;\r\n  newPlayersArr.map((player) => {\r\n    if (player.playerId === id) {\r\n      player.gameHistory.unshift(obj)\r\n      player.bafsObj.extraAtack = 0;\r\n      player.bafsObj.extraPercent = 0;\r\n      player.bafsObj.extraSpeed = 0;\r\n      return player;\r\n    } else return player;\r\n  })\r\n\r\n  dispatch({\r\n    type: WRITE_ROUND_SCTATISTIC,\r\n    payload: newPlayersArr\r\n  });\r\n\r\n  dispatch({\r\n    type: PLAYER_PLAYED,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const setBafToPlayer = (plyerId, baf) => dispatch => {\r\n  let newPlayersArr = store.getState().players.gameSchema.players;\r\n\r\n  newPlayersArr = newPlayersArr.map(player => {\r\n    if (player.playerId === plyerId) {\r\n      player.bafs.unshift(baf);\r\n      player.bafs.forEach((baf, index) => {\r\n        switch (baf.id) {\r\n          case 0:\r\n          case 5:\r\n            player.health += 1\r\n            break;\r\n          case 12:\r\n            player.health += 2\r\n            break;\r\n          case 1:\r\n          case 15:\r\n          case 17:\r\n            player.health -= 1\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      })\r\n\r\n      return player;\r\n    } else return player;\r\n  })\r\n\r\n  dispatch({\r\n    type: ADD_BAF,\r\n    payload: newPlayersArr\r\n  });\r\n}\r\n\r\nexport const checkPlayers = () => async dispatch => {\r\n  let newPlayersArr = await store.getState().players.gameSchema.players;\r\n  let diedPlayersArr = await store.getState().players.gameSchema.diedPlayers;\r\n\r\n  await newPlayersArr.map(player => {\r\n    if (player.health <= 0 && !diedPlayersArr.includes(player.playerId)) {\r\n      dispatch({\r\n        type: PLAYER_DIED,\r\n        payload: player.playerId\r\n      });\r\n    }\r\n  })\r\n\r\n  let livePlayersNumber = await newPlayersArr.length - store.getState().players.gameSchema.diedPlayers.length\r\n  // console.log(livePlayersNumber)\r\n  if (livePlayersNumber <= 1) {\r\n    gameOver(livePlayersNumber)\r\n  }\r\n\r\n\r\n}\r\n\r\nexport const setResultTable = (sortedTable) => dispatch => {\r\n  dispatch({\r\n    type: SET_RESULT_TABLE,\r\n    payload: sortedTable\r\n  });\r\n}","import {\r\n  faPercent,\r\n  faSkiing,\r\n  faMeteor,\r\n  faRadiation,\r\n  faHeart, faDna,\r\n  faHeartbeat,\r\n  faSnowplow,\r\n  faShippingFast,\r\n  //====\r\n  faCat,\r\n  faCrow,\r\n  faGhost,\r\n  faSkullCrossbones,\r\n  faDog,\r\n  faDove,\r\n  faDragon,\r\n  faFish,\r\n  faFrog,\r\n  faHorse,\r\n  faOtter,\r\n  faBaby,\r\n  faBug,\r\n  faDizzy,\r\n  faFemale,\r\n  faFlushed,\r\n  faFrown,\r\n  faGrimace,\r\n  faGrin,\r\n  faGrinBeam,\r\n  faGrinHearts,\r\n  faGrinTongueSquint,\r\n  faGrinTongueWink,\r\n  faSpider,\r\n  faBlind,\r\n  faAccessibleIcon,\r\n  faAmbulance,\r\n  faAllergies,\r\n  faRobot,\r\n  faAngry,\r\n  faBabyCarriage,\r\n  faBed,\r\n  faBiking,\r\n  faCarrot,\r\n  faCloudSun,\r\n  faFighterJet,\r\n  faSnowman,\r\n  faPizzaSlice\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport store from '../redux/store/store';\r\nimport { setResultTable } from '../redux/actions/playersActions';\r\n\r\nexport const bafs = [\r\n  {\r\n    id: 0,\r\n    kind: \"health\",\r\n    name: \"+ 1 HEALTH\",\r\n    icon: faHeart\r\n  },\r\n  {\r\n    id: 1,\r\n    kind: \"health\",\r\n    name: \"- 1 HEALTH\",\r\n    icon: faHeartbeat\r\n  },\r\n  {\r\n    id: 2,\r\n    kind: \"atack\",\r\n    name: \"Тебя укусил паук, и ты стал человеком-пауком. Твоя получил +2 к силе!\",\r\n    icon: faSpider\r\n  },\r\n  {\r\n    id: 3,\r\n    kind: \"percent\",\r\n    name: \"Ты немного ослеп, и по этому сбился с пути, по этому путь который ты пройдешь увеличился на 7%.\",\r\n    icon: faBlind\r\n  },\r\n  {\r\n    id: 4,\r\n    kind: \"percent\",\r\n    name: \"Ух ты! Профессор с людей Х согласился тебе помочь и подбросил тебя ближе к выходу на 5%\",\r\n    icon: faAccessibleIcon\r\n  },\r\n  {\r\n    id: 5,\r\n    kind: \"health\",\r\n    name: \"Мимо проезжала скорая, и подкинуло одно лишнее сердечко, теперь у тебя +1 сердце\",\r\n    icon: faAmbulance\r\n  },\r\n  {\r\n    id: 6,\r\n    kind: \"atack\",\r\n    name: \"Ты в баре выпил какую-то жижу и теперь тебе поплохело, твоя сила упала на 3\",\r\n    icon: faAllergies\r\n  },\r\n  {\r\n    id: 7,\r\n    kind: \"speed\",\r\n    name: \"Следующий раз полоса дороги будет убывать так же медленно, как работает адроид, то-есть очень медленно\",\r\n    icon: faRobot\r\n  },\r\n  {\r\n    id: 8,\r\n    kind: \"atack\",\r\n    name: \"Ты нарвался на злого деда, и он тебе надавал по коленям своим костылем, теперь ты медленно побежишь\",\r\n    icon: faAngry\r\n  },\r\n  {\r\n    id: 9,\r\n    kind: \"percent\",\r\n    name: \"На твоем пути появилась мамочка с коляской, тебе придется ее оббежать, это +6% к твоей дороге\",\r\n    icon: faBabyCarriage\r\n  },\r\n  {\r\n    id: 10,\r\n    kind: \"atack\",\r\n    name: \"Ты хорошо выспался и по этому сильнее, +2 к силе\",\r\n    icon: faBed\r\n  },\r\n  {\r\n    id: 11,\r\n    kind: \"percent\",\r\n    name: \"Пока ты бежал, тебе догнал какой-то байкер и подбросил, -5% к дороге\",\r\n    icon: faBiking\r\n  },\r\n  {\r\n    id: 12,\r\n    kind: \"health\",\r\n    name: \"Ля какая вкусная и полезная морковочка, она добавила тебе +2 жизни\",\r\n    icon: faCarrot\r\n  },\r\n  {\r\n    id: 13,\r\n    kind: \"percent\",\r\n    name: \"Черная кошка перебежала тебе дорогу, а ты суеверный, придется оббегать +10% к дороге\",\r\n    icon: faCat\r\n  },\r\n  {\r\n    id: 14,\r\n    kind: \"atack\",\r\n    name: \"Вышло солнышко, зарядило тебя силой, +3к силе\",\r\n    icon: faCloudSun\r\n  },\r\n  {\r\n    id: 15,\r\n    kind: \"health\",\r\n    name: \"Тебя сбил истрибитель, упс... -1 жизнь\",\r\n    icon: faFighterJet\r\n  },\r\n  {\r\n    id: 16,\r\n    kind: \"percent\",\r\n    name: \"Ты встретил доброго Сергея, он подсказал тебе как сократить дорогу. -10% к дороге\",\r\n    icon: faSnowman\r\n  },\r\n  {\r\n    id: 17,\r\n    kind: \"health\",\r\n    name: \"На тебя упал метеорит. -1 жизнь\",\r\n    icon: faMeteor\r\n  },\r\n  {\r\n    id: 18,\r\n    kind: \"atack\",\r\n    name: \"Ммм.. пица! Скував ее ты стал сильнее!\",\r\n    icon: faPizzaSlice\r\n  },\r\n  {\r\n    id: 19,\r\n    kind: \"atack\",\r\n    name: \"Ты искупался в чернобыльской речке, и у тебя выросло еще 3 ноги, теперь ты быстрее бегаешь\",\r\n    icon: faRadiation\r\n  },\r\n]\r\n\r\nexport const gameOver = async (livePlayersNumber) => {\r\n  let newPlayersArr = store.getState().players.gameSchema.players;\r\n  let resultSchema = [];\r\n\r\n  newPlayersArr.map((player, index) => {\r\n    let obj = {};\r\n    obj.playerId = player.playerId;\r\n    obj.hp = player.health;\r\n    obj.icon = player.icon;\r\n    obj.name = player.name;\r\n    obj.gameHistory = player.gameHistory,\r\n      obj.gs = 0,\r\n      resultSchema.push(obj)\r\n  })\r\n\r\n  resultSchema = resultSchema.map(item => {\r\n    item.gs += item.hp * 1000;\r\n    item.gameHistory.forEach((round) => {\r\n      item.gs += round.clicks > 0 ? (round.clicks / -10) : -30\r\n    })\r\n    return item\r\n  })\r\n\r\n  await store.dispatch(setResultTable(resultSchema));\r\n};\r\n\r\nexport const genereateRandomNumber = (from, to) => {\r\n  return Math.round(Math.random() * (from + to));\r\n};\r\n\r\nexport const iconsArr = [\r\n  faCat,\r\n  faCrow,\r\n  faGhost,\r\n  faSkullCrossbones,\r\n  faSpider,\r\n  faDog,\r\n  faDove,\r\n  faDragon,\r\n  faFish,\r\n  faFrog,\r\n  faHorse,\r\n  faOtter,\r\n  faAngry,\r\n  faBaby,\r\n  faBlind,\r\n  faBug,\r\n  faDizzy,\r\n  faFemale,\r\n  faFlushed,\r\n  faFrown,\r\n  faGrimace,\r\n  faGrin,\r\n  faGrinBeam,\r\n  faGrinHearts,\r\n  faGrinTongueSquint,\r\n  faGrinTongueWink\r\n]","import pathToRegexp from \"path-to-regexp\";\n\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compileGenerator = function compileGenerator(pattern) {\n  var cacheKey = pattern;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n\n  if (cache[pattern]) return cache[pattern];\n\n  var compiledGenerator = pathToRegexp.compile(pattern);\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledGenerator;\n    cacheCount++;\n  }\n\n  return compiledGenerator;\n};\n\n/**\n * Public API for generating a URL pathname from a pattern and parameters.\n */\nvar generatePath = function generatePath() {\n  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (pattern === \"/\") {\n    return pattern;\n  }\n  var generator = compileGenerator(pattern);\n  return generator(params, { pretty: true });\n};\n\nexport default generatePath;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport { createLocation, locationsAreEqual } from \"history\";\nimport generatePath from \"./generatePath\";\n\n/**\n * The public API for updating the location programmatically\n * with a component.\n */\n\nvar Redirect = function (_React$Component) {\n  _inherits(Redirect, _React$Component);\n\n  function Redirect() {\n    _classCallCheck(this, Redirect);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Redirect.prototype.isStatic = function isStatic() {\n    return this.context.router && this.context.router.staticContext;\n  };\n\n  Redirect.prototype.componentWillMount = function componentWillMount() {\n    invariant(this.context.router, \"You should not use <Redirect> outside a <Router>\");\n\n    if (this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevTo = createLocation(prevProps.to);\n    var nextTo = createLocation(this.props.to);\n\n    if (locationsAreEqual(prevTo, nextTo)) {\n      warning(false, \"You tried to redirect to the same route you're currently on: \" + (\"\\\"\" + nextTo.pathname + nextTo.search + \"\\\"\"));\n      return;\n    }\n\n    this.perform();\n  };\n\n  Redirect.prototype.computeTo = function computeTo(_ref) {\n    var computedMatch = _ref.computedMatch,\n        to = _ref.to;\n\n    if (computedMatch) {\n      if (typeof to === \"string\") {\n        return generatePath(to, computedMatch.params);\n      } else {\n        return _extends({}, to, {\n          pathname: generatePath(to.pathname, computedMatch.params)\n        });\n      }\n    }\n\n    return to;\n  };\n\n  Redirect.prototype.perform = function perform() {\n    var history = this.context.router.history;\n    var push = this.props.push;\n\n    var to = this.computeTo(this.props);\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  };\n\n  Redirect.prototype.render = function render() {\n    return null;\n  };\n\n  return Redirect;\n}(React.Component);\n\nRedirect.propTypes = {\n  computedMatch: PropTypes.object, // private, from <Switch>\n  push: PropTypes.bool,\n  from: PropTypes.string,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n};\nRedirect.defaultProps = {\n  push: false\n};\nRedirect.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired\n    }).isRequired,\n    staticContext: PropTypes.object\n  }).isRequired\n};\n\n\nexport default Redirect;","// Written in this round about way for babel-transform-imports\nimport Redirect from \"react-router/es/Redirect\";\n\nexport default Redirect;","import React, { Component, lazy } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isEmpty } from 'lodash';\r\nimport { startRound, writeRoundStatistic, resetCircle, checkPlayers, minusHealth } from './../../redux/actions/playersActions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { faThermometerHalf } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { genereateRandomNumber } from '../../utils/constants';\r\n\r\nconst GameOver = lazy(() => import('../gameOver/GameOver'));\r\nconst ClickBar = lazy(() => import('./ClickBar'));\r\n\r\nclass GameComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chooseHeroModal: false,\r\n      road: null,\r\n      bonus: {\r\n        atack: 0,\r\n        speed: 0,\r\n        percent: 0\r\n      },\r\n      currentPlayer: null,\r\n      percentage: 50,\r\n      activeClickPlace: false,\r\n      FortuneModal: false,\r\n      gameResult: {\r\n        status: null,\r\n        clicks: 0,\r\n        time: null\r\n      },\r\n      timer: {\r\n        on: false,\r\n        mills: 0,\r\n        secs: 0,\r\n        mins: 0\r\n      },\r\n      colors: {\r\n        1: \"bg-success\",\r\n        2: \"bg-warning\",\r\n        3: \"bg-primary\"\r\n      },\r\n      gameStartCounter: 3,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      ...this.state,\r\n      percentage: 50,\r\n      gameStartCounter: 3,\r\n      road: genereateRandomNumber(1, 13)\r\n    })\r\n  };\r\n\r\n  setBonuses = async () => {\r\n    const { players } = this.props;\r\n    let hh = await players.gameSchema.players[this.state.currentPlayer].bafsObj.extraAtack\r\n    let ff = await players.gameSchema.players[this.state.currentPlayer].bafsObj.extraSpeed\r\n\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      bonus: {\r\n        ...this.state.bonus,\r\n        atack: hh,\r\n        speed: ff,\r\n      }\r\n    })\r\n  };\r\n\r\n  startRound = async () => {\r\n    const { players, startRound } = this.props;\r\n\r\n    if (isEmpty(players.gameSchema) ||\r\n      players.gameSchema.currentPlayer == null) {\r\n      console.log(\"ERROR\")\r\n      this.toggleState('chooseHeroModal');\r\n    } else {\r\n      startRound(true);\r\n      const { players } = this.props;\r\n      let bb = await players.gameSchema.players[players.gameSchema.currentPlayer].bafsObj.extraPercent\r\n      this.setState({\r\n        ...this.state,\r\n        percentage: this.state.percentage + bb,\r\n      })\r\n      this.startCounter();\r\n    }\r\n  };\r\n\r\n  startCounter = () => {\r\n    let counter = 3;\r\n    setInterval(() => {\r\n      if (counter > 0) {\r\n        counter -= 1\r\n        this.setState({\r\n          ...this.state,\r\n          currentPlayer: this.props.players.gameSchema.currentPlayer,\r\n          gameStartCounter: counter\r\n        })\r\n      }\r\n    }, 900)\r\n  };\r\n\r\n  plusPercent = async () => {\r\n    const { percentage, activeClickPlace, bonus } = this.state;\r\n    const { players } = this.props;\r\n    let atack = players.gameSchema.players[players.gameSchema.currentPlayer].atack;\r\n    let plus = percentage + parseInt(atack) + this.state.bonus.atack;\r\n\r\n    activeClickPlace && this.setState({\r\n      ...this.state,\r\n      gameResult: {\r\n        ...this.state.gameResult,\r\n        clicks: this.state.gameResult.clicks + 1\r\n      },\r\n      percentage: plus\r\n    }, () => {\r\n      this.state.percentage >= 100 && this.endRound(true);\r\n    })\r\n  };\r\n\r\n  resetIntervalFunc = (item) => {\r\n    clearInterval(item);\r\n  };\r\n\r\n  minusPercent = async (number, interval) => {\r\n    const { percentage, bonus } = this.state;\r\n    percentage <= 0 && this.endRound(false);\r\n\r\n    let tempVariable = await setInterval(() => {\r\n\r\n      if ((percentage > 0 && percentage < 100)) {\r\n        this.setState({\r\n          ...this.state,\r\n          minusPercentintervalResetFunc: tempVariable,\r\n          percentage: this.state.percentage - (this.state.activeClickPlace ? number.toFixed(2) : 0)\r\n        }, () => {\r\n          this.state.percentage <= 0 && this.endRound(false);\r\n        })\r\n      }\r\n\r\n    }, (interval * 1000 + parseInt(bonus.speed) * 100));\r\n  };\r\n\r\n  endRound = (status) => {\r\n    const { mills, secs, mins } = this.state.timer;\r\n    const { players, writeRoundStatistic, startRound } = this.props;\r\n    let finalRoundObj = this.state.gameResult;\r\n    this.resetIntervalFunc(this.state.minusPercentintervalResetFunc);\r\n    this.resetIntervalFunc(this.state.startIntervalResetFunc);\r\n\r\n    finalRoundObj.status = status;\r\n    finalRoundObj.time = mins + ':' + secs + \":\" + mills,\r\n      this.setState({\r\n        gameStartCounter: 3,\r\n        activeClickPlace: false,\r\n        timer: {\r\n          on: false,\r\n          mills: 0,\r\n          mins: 0,\r\n          secs: 0\r\n        },\r\n        percentage: 50,\r\n        gameResult: {\r\n          status: null,\r\n          clicks: 0,\r\n          time: null\r\n        },\r\n        FortuneModal: true\r\n      }, async () => {\r\n        startRound(false);\r\n        await writeRoundStatistic(\r\n          players.gameSchema.currentPlayer,\r\n          finalRoundObj,\r\n          players.gameSchema.circle\r\n        );\r\n        this.checkCircle(finalRoundObj.status);\r\n      })\r\n  };\r\n\r\n  checkCircle = async (status) => {\r\n    const { players, resetCircle, minusHealth, checkPlayers } = this.props;\r\n    if (players.gameSchema.players.length ===\r\n      players.gameSchema.playedPlayers.length +\r\n      players.gameSchema.diedPlayers.length) {\r\n      await resetCircle();\r\n      checkPlayers();\r\n    }\r\n\r\n    !status && await minusHealth(this.state.currentPlayer, 1);\r\n  };\r\n\r\n  activateZone = async () => this.setState({\r\n    ...this.state,\r\n\r\n    activeClickPlace: true\r\n  }, () => {\r\n    let timeInterval = this.props.players.gameSchema.circle / 10 + 0.15\r\n    this.minusPercent(\r\n      5 + (this.props.players.gameSchema.circle + 1 / 10 + 0.3),\r\n      1 - (timeInterval > -0.1 ? timeInterval : 0.1)\r\n    );\r\n    this.setBonuses();\r\n    this.toggleTimer(true);\r\n  });\r\n\r\n\r\n  toggleTimer = (bool) => {\r\n    this.setState({\r\n      ...this.state,\r\n      timer: {\r\n        ...this.state.timer,\r\n        on: bool ? bool : !this.state.timer.on\r\n      }\r\n    }, () => {\r\n      this.state.timer.on && this.startTimer();\r\n    })\r\n  };\r\n\r\n  startTimer = () => {\r\n    let seconds = 0;\r\n    let milliseconds = 0;\r\n    let minutes = 0;\r\n\r\n    let ll = setInterval(() => {\r\n      if (milliseconds === 100) {\r\n        seconds += 1;\r\n        milliseconds = 0;\r\n        milliseconds += 10;\r\n      } else milliseconds += 10;\r\n      if (seconds === 60) { minutes += 1; seconds = 0; }\r\n      this.state.timer.on && this.setState({\r\n        ...this.state,\r\n        startIntervalResetFunc: ll,\r\n        timer: {\r\n          ...this.state.timer,\r\n          secs: seconds,\r\n          mills: milliseconds,\r\n          mins: minutes\r\n        }\r\n      })\r\n    }, 100);\r\n  };\r\n\r\n  toggleState = (stateName) => {\r\n    this.setState({\r\n      ...this.state,\r\n      [stateName]: !this.state[stateName]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      gameStartCounter,\r\n      colors,\r\n      percentage,\r\n      bonus,\r\n      activateZone,\r\n      activeClickPlace,\r\n      FortuneModal,\r\n      timer,\r\n      chooseHeroModal,\r\n      road\r\n    } = this.state;\r\n    const { players } = this.props;\r\n\r\n    return (\r\n      <div className={`game ${players.gameSchema.activeGame && 'full-window'}`} >\r\n        {players.gameSchema.gameOver && <GameOver />}\r\n        {\r\n          players.gameSchema.activeGame && gameStartCounter >= 1 &&\r\n          <div className={`game-bg ${colors[gameStartCounter]}`}>\r\n            <div className=\"game-start-counter\">{gameStartCounter > 0 ? gameStartCounter : \"GO!\"}</div>\r\n          </div>\r\n        }\r\n        {\r\n          players.gameSchema.activeGame && gameStartCounter < 1 &&\r\n          !players.gameSchema.gameOver &&\r\n          <div\r\n            className={`click-place road-bg _${road + 1}`}\r\n            onClick={() =>\r\n              activeClickPlace ?\r\n                this.plusPercent()\r\n                : this.activateZone()\r\n            }\r\n          >\r\n            <p>{percentage} ===={bonus.percent}</p>\r\n            <p>{percentage}</p>\r\n            <ClickBar percentage={percentage + bonus.percent} activateZone={activateZone} />\r\n            <p className=\"game-time\">{timer.mins + \" - \" + timer.secs + ' - ' + timer.mills}</p>\r\n          </div>\r\n        }\r\n        {isEmpty(players.gameSchema.players) && <Redirect to=\"/\" />}\r\n        {\r\n          !players.gameSchema.activeGame &&\r\n          !players.gameSchema.gameOver &&\r\n          !isEmpty(players.gameSchema) &&\r\n          <button className=\"btn _custom-width\" onClick={() => this.startRound()}>\r\n            <label className=\"btn-bg\"></label>\r\n            <span>\r\n              GO!!\r\n            </span>\r\n          </button>\r\n        }\r\n        <Modal isOpen={FortuneModal}  >\r\n          <ModalHeader>Do you want to spin a cube for some bonus?</ModalHeader>\r\n          <ModalBody>\r\n            {/* Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. */}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Link to=\"/ff\">SPIN</Link>\r\n            <button color=\"secondary\" onClick={() => this.toggleState(\"FortuneModal\")}>NO !</button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n\r\n        <Modal isOpen={chooseHeroModal}  >\r\n          <ModalHeader>Please!!!!</ModalHeader>\r\n          <ModalBody>\r\n            <p className=\"russian-text\">\r\n              Выбери своего персонажа.\r\n            </p>\r\n            <p className=\"russian-text\">\r\n              Просто жмакни на свою иконку сверху в меню. ОК?\r\n            </p>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button onClick={() => this.toggleState(\"chooseHeroModal\")} >OK</button>\r\n            {/* <Link to=\"/gg\">SPIN</Link>\r\n            <button color=\"secondary\" onClick={() => this.toggleState(\"FortuneModal\")}>NO !</button> */}\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  players: state.players\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { startRound, writeRoundStatistic, resetCircle, checkPlayers, minusHealth })(GameComponent);"],"sourceRoot":""}